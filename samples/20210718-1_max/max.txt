push1 dup sub     #[N(=0)
:input            #[...|N
inn               #[...|N,p
dup push1 dup sub #[...|N,p,p,0
gt if::input_end  #[...|N,p
push2 push1 roll  #[...|p:N
push1 add         #[...:p(=>a_N)|N+1(=>N)
goto:input        #[...|N
:input_end        #[...|N,p
pop               #[...:a_1,...,a_N|N
########################################
## max
##  [...|a_1,...,a_N,N
##  ==> [...|max(a_n)
########################################
:max             #[...|a_1,...,a_N:N
push2 push1 roll #[...|a_1,...,N,a_N
dup              #[...|a_1,...,N,a_N,a_N(=>r)
push3 push2 roll #[...|a_1,...,a_N,r,N
dup              #[...|a_1,...,a_N(=>a_c),r,N,N(=>c)

:max_loop        #[...|a_1,...,a_c,r,N,c
dup if::max_end  #[...|a_1,...,a_{c-1},a_c(=>s),r,N,c
push1 sub        #[...|a_1,...,a_{c-1}(=>a_c),s,r,N,c-1(=>c)
push4 push2 roll #[...|a_1,...,a_c,N,c,s,r
dup              #[...|a_1,...,a_c,N,c,s,r,r
push3 push2 roll #[...|a_1,...,a_c,N,c,r,r,s
dup              #[...|a_1,...,a_c,N,c,r,r,s,s
push3 push1 roll #[...|a_1,...,a_c,N,c,r,s,r,s
gt if:max_nop:   #[...|a_1,...,a_c,N,c,r,s
push2 push1 roll #[...|a_1,...,a_c,N,c,s(=>r),r(=>s)
:max_nop         #[...|a_1,...,a_c,N,c,r,s
pop              #[...|a_1,...,a_c,N,c,r
push3 push1 roll #[...|a_1,...,a_c,r,N,c
goto:max_loop    #[...|a_1,...,a_c,r,N,c

:max_end         #[...|r,N,c
pop pop          #[...|r
########################################
## /max
########################################

:output          #[...|r
outn             #[...|   ==>r
end
